#user  nobody;
worker_processes  8;  #优化开启8个线程(cat /proc/cpuinfo|grep "cpu cores"|uniq)
worker_cpu_affinity auto; #优化自动分配绑定内核
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;

#针对 nginx 句柄的文件限制
worker_rlimit_nofile 35535;

events {
    use epoll; #优化为epoll模型
    worker_connections  65535;  #优化连接数
    multi_accept on;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  300000;
    client_max_body_size   4096m;
    charset utf-8;  #设置字符集

    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
        }
         # wxgc-gateway模板的后台地址(这里修改成网关地址)
         #这里配置的是负载均衡 方便以后横向扩张
        upstream wxgcGateway {
            ip_hash; #ip匹配模式
            server 172.22.93.141:9000 weight=1;
        }
        #Sentinel控制中心地址
        upstream wxgcSentinel {
           ip_hash; #ip匹配模式
           server 172.22.93.141:8858 weight=1;
        }
        #Sentinel控制中心地址
        upstream wxgcFileView {
           ip_hash; #ip匹配模式
           server 172.22.93.141:8012 weight=1;
        }

    #gzip压缩 提升静态文件速度
    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 6;
    gzip_types text/plain application/javascript application/css  text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png file/apk;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";

    server {
        #nginx监视端口(也就是前端访问的端口和nginx代理端口)
        listen       80;
        server_name  127.0.0.1; #不要写localhost
        #https协议启用下面的配置 (https 请将上面的 80 端口改成 443)
        #ssl on;
        #ssl_certificate /usr/share/nginx/cert/5346388_www.zhihuiyunpingtai.cn.pem;
        #ssl_certificate_key /usr/share/nginx/cert/5346388_www.zhihuiyunpingtai.cn.key;
        #ssl_session_timeout 5m;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        #ssl_prefer_server_ciphers on;

        client_max_body_size   4096m;
        charset 'utf-8';
        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        #前端网页的访问地址(地址路径要配合dockerfile中copy的路径)
	      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
          try_files $uri $uri/ /index.html;
          add_header Access-Control-Allow-Origin *;
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
          if ($request_method = 'OPTIONS') {
              return 204;
          }
          expires  2h;
        }

        #API接口代理的接口转发
        location /wxgc-api {
        		rewrite ^/wxgc-api/(.*)$ /$1 break;
        		#后台地址(这里是网关地址-也就是上面的负载均衡 一般不用改动)
            proxy_pass   http://wxgcGateway;
        }

       #API接口代理的接口转发
       location /view-api {
           rewrite ^/view-api/(.*)$ /$1 break;
           #后台地址(这里是网关地址-也就是上面的负载均衡 一般不用改动)
           proxy_pass   http://wxgcFileView;
       		 proxy_set_header Host 121.41.123.70:8012;
       }

        #system模块的webSocket代理转发
        location ^~/system-websocket {
            #后台websocket(这里是网关地址-也就是上面的负载均衡 一般不用改动)
        	  proxy_pass   http://wxgcGateway/system/websocket;
        	  proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        #bimface的代理
        location /bimface-api  {
        	rewrite ^/bimface-api/(.*)$ /$1 break;
            proxy_pass  https://api.bimface.com;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
